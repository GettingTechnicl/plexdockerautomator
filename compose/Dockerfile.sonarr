FROM mdhiggins/sonarr-sma

# Install dependencies
RUN apk update && apk add --no-cache \
    wget \
    build-base \
    yasm \
    x264-dev \
    x265-dev \
    libvpx-dev \
    libass-dev \
    libwebp-dev \
    opus-dev \
    freetype-dev \
    frei0r-plugins-dev \
    vidstab-dev \
    libxcb-dev \
    libvorbis-dev \
    pkgconfig \
    x264 \
    x265 \
    libvpx \
    libass \
    libwebp \
    opus \
    freetype \
    frei0r-plugins \
    vidstab \
    libxcb \
    libvorbis \
    git \
    nasm \
    autoconf \
    automake \
    libtool \
    make \
    curl \
    bash \
    linux-headers

# Create and set permissions for the temporary directory
RUN mkdir -p /run/sonarr-temp && chmod 777 /run/sonarr-temp

# Set TMPDIR environment variable
ENV TMPDIR /run/sonarr-temp

# Install ffnvcodec headers
RUN git clone https://git.videolan.org/git/ffmpeg/nv-codec-headers.git && \
    cd nv-codec-headers && \
    git checkout n11.1.5.3 && \
    make && \
    make install && \
    cd .. && \
    rm -rf nv-codec-headers

# Download and compile FFmpeg with NVIDIA support
RUN wget https://ffmpeg.org/releases/ffmpeg-4.2.2.tar.bz2 && \
    tar xjf ffmpeg-4.2.2.tar.bz2 && \
    cd ffmpeg-4.2.2 && \
    ./configure --enable-nonfree --enable-gpl --enable-libx264 --enable-libx265 \
                --enable-libvpx --enable-libvorbis --enable-libass \
                --enable-libwebp --enable-libopus --enable-libfreetype \
                --enable-frei0r --enable-libvidstab --enable-libxcb --enable-nvenc && \
    make && \
    make install && \
    cd .. && \
    rm -rf ffmpeg-4.2.2 ffmpeg-4.2.2.tar.bz2

# Download and install CUDA and cuDNN for Alpine
RUN wget https://developer.download.nvidia.com/compute/cuda/repos/ubuntu1804/x86_64/cuda-ubuntu1804.pin && \
    mv cuda-ubuntu1804.pin /etc/apk/keys/ && \
    wget https://developer.download.nvidia.com/compute/cuda/repos/ubuntu1804/x86_64/7fa2af80.pub && \
    mv 7fa2af80.pub /etc/apk/keys/ && \
    apk add --no-cache --repository=https://developer.download.nvidia.com/compute/cuda/repos/ubuntu1804/x86_64 \
    cuda \
    libcudnn8 \
    libcudnn8-dev

# Clean up
RUN apk del build-base yasm \
    x264-dev \
    x265-dev \
    libvpx-dev \
    libass-dev \
    libwebp-dev \
    opus-dev \
    freetype-dev \
    frei0r-plugins-dev \
    vidstab-dev \
    libxcb-dev \
    libvorbis-dev \
    pkgconfig \
    git \
    nasm \
    autoconf \
    automake \
    libtool \
    make \
    curl \
    bash \
    linux-headers
